@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 1.5rem;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../fonts/KumbhSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --bg-dark: oklch(0.1 0.005 20);
  --bg: oklch(0.15 0.005 20);
  --bg-light: oklch(0.2 0.005 20);
  --text: oklch(0.96 0.01 20);
  --text-muted: oklch(0.76 0.01 20);
  --highlight: oklch(0.5 0.01 20);
  --border-color: oklch(0.4 0.01 20);
  --border-muted: oklch(0.3 0.01 20);
  --primary: oklch(0.76 0.1 20);
  --secondary: oklch(0.76 0.1 200);
  --danger: oklch(0.7 0.05 30);
  --warning: oklch(0.7 0.05 100);
  --success: oklch(0.7 0.05 160);
  --info: oklch(0.7 0.05 260);
}
:root body.light {
  --bg-dark: oklch(0.92 0.005 20);
  --bg: oklch(0.96 0.005 20);
  --bg-light: oklch(1 0.005 20);
  --text: oklch(0.15 0.01 20);
  --text-muted: oklch(0.4 0.01 20);
  --highlight: oklch(1 0.01 20);
  --border-color: oklch(0.6 0.01 20);
  --border-muted: oklch(0.7 0.01 20);
  --primary: oklch(0.4 0.1 20);
  --secondary: oklch(0.4 0.1 200);
  --danger: oklch(0.5 0.05 30);
  --warning: oklch(0.5 0.05 100);
  --success: oklch(0.5 0.05 160);
  --info: oklch(0.5 0.05 260);
}
:root {
  --border: var(--border-width-m) solid var(--border-color);
  --border-width-xl: 0.375rem;
  --border-width-l: 0.25rem;
  --border-width-m: 0.1875rem;
  --border-width-s: 0.0625rem;
  --border-radius-l: 0.75rem;
  --border-radius-m: 0.625rem;
  --border-radius: 0.5rem;
  --border-radius-xs: 0.375rem;
  --border-radius-xxs: 0.3125rem;
  --border-radius-xxxs: 0.25rem;
  --input-height: 3rem;
  --font-family-base: "Manrope";
  --container-width: clamp(80rem, 0rem + 100vw, 100rem);
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --transition-change-theme: 0.4s;
}

.container {
  width: 100%;
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  overflow: hidden !important;
  width: 0.0625rem !important;
  height: 0.0625rem !important;
  margin: -0.0625rem !important;
  padding: 0 !important;
  white-space: nowrap !important;
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  clip-path: inset(100%) !important;
}

@media (width > 63.9375rem) {
  .visible-tablet {
    display: none !important;
  }
}

@media (width <= 63.9375rem) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (width > 47.9375rem) {
  .visible-mobile {
    display: none !important;
  }
}

@media (width <= 47.9375rem) {
  .hidden-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base), sans-serif;
  color: var(--text);
  background-color: var(--bg);
  height: 100%;
  min-height: 100vh;
  overflow: hidden;
  transition-duration: var(--transition-change-theme);
}

h1,
.h1 {
  font-size: clamp(1.75rem, 1.145661157rem + 2.479338843vw, 3.625rem);
  font-weight: 700;
}

h2,
.h2 {
  font-size: clamp(1.5rem, 1.0165289256rem + 1.9834710744vw, 3rem);
  font-weight: 700;
}

h3,
.h3 {
  font-size: clamp(1.25rem, 0.8873966942rem + 1.4876033058vw, 2.375rem);
  font-weight: 700;
}

h4,
.h4 {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
  font-weight: 400;
}

h5,
.h5 {
  font-size: clamp(1.125rem, 1.0444214876rem + 0.3305785124vw, 1.375rem);
  font-weight: 400;
}

h6,
.h6 {
  font-size: clamp(1rem, 0.9194214876rem + 0.3305785124vw, 1.25rem);
  font-weight: 400;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--border-color);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--border-color);
  }
}
a[class] {
  text-decoration: none;
}

@keyframes spin360deg {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.625rem;
  padding-top: 1.25rem;
  margin-bottom: 0.625rem;
  flex-shrink: 0;
  font-size: clamp(1.25rem, 0.8873966942rem + 1.4876033058vw, 2.375rem);
  font-weight: 700;
}
.header__content {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.625rem;
  cursor: default;
}
@media (any-hover: hover) {
  .header__content:hover .header__logo {
    animation-name: spin360deg;
    animation-duration: 0.9s;
    animation-iteration-count: infinite;
  }
}
.header__logo {
  display: flex;
  justify-content: center;
  align-items: center;
}
.header__theme-icon-inner {
  display: flex;
  justify-content: center;
  align-items: center;
}

.button {
  height: var(--input-height);
  border-radius: 2.125rem;
  transition-duration: var(--transition-change-theme);
}
@media (any-hover: hover) {
  .button:hover {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
@media (any-hover: none) {
  .button:active {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
.button:focus {
  outline: none;
  box-shadow: none;
}
.button:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.button-theme {
  --sizeButton: 6rem;
}
@media (width <= 63.9375rem) {
  .button-theme {
    --sizeButton: 4.75rem;
    --input-height: 2.25rem;
  }
}
.button-theme {
  position: relative;
  width: var(--sizeButton);
  background-color: var(--bg-light);
  border: var(--border);
}
@media (any-hover: hover) {
  .button-theme:hover {
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-theme:active {
    transform: translateY(-0.125rem);
  }
}
.button-theme:active {
  transform: translateY(0);
}
.button-theme-toggle {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(var(--sizeButton) / 4);
  height: calc(var(--sizeButton) / 4);
  left: calc(var(--sizeButton) / 8);
  transition-duration: var(--transition-change-theme);
}
.button-theme-toggle svg {
  width: calc(var(--sizeButton) / 4);
  height: calc(var(--sizeButton) / 4);
  border: var(--border-width-s) solid var(--border-color);
  border-radius: 50%;
  background-color: var(--bg-dark);
}
.button-theme-toggle.is-active {
  --translateX: calc(var(--sizeButton) / 2.2);
  transform: translateX(var(--translateX));
}
.button-clicking {
  width: 18.75rem;
  height: 18.75rem;
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
}
@media (any-hover: hover) {
  .button-clicking:hover {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-clicking:active {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
.button-clicking:active {
  transform: translateY(0);
}
.button-reset {
  align-self: end;
  width: 3rem;
  height: 3rem;
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
}
.button-reset svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}
@media (any-hover: hover) {
  .button-reset:hover svg {
    animation-name: spin360deg;
    animation-duration: 0.7s;
  }
  .button-reset:hover {
    transform: translateY(-0.125rem);
  }
  .button-reset:hover:active {
    transform: translateY(0);
  }
}
.button-popup-link {
  --input-height: 2.25rem;
  border-radius: var(--border-radius-m);
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
  border-width: var(--border-width-s);
}
@media (any-hover: hover) {
  .button-popup-link:hover {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-popup-link:active {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
.button-popup-link:active {
  transform: translateY(0);
}

.main {
  display: grid;
  grid-template-columns: 60% 40%;
  grid-template-rows: auto 1fr;
  grid-template-areas: "score-counter score-counter" "game tabs-inner";
  row-gap: 0.625rem;
  flex: 1;
  min-height: 0;
  margin-bottom: 1.25rem;
  overflow: hidden;
}

.footer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}

.soc1als__list {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1.25rem;
}
.soc1als__item {
  display: flex;
  justify-content: center;
  align-items: center;
}
.soc1als__link {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.625rem;
  padding: 0.5rem 0.75rem;
}
.soc1als__link:focus {
  outline: none;
  box-shadow: none;
}
.soc1als__link:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.soc1als__link:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .soc1als__link:hover {
    color: var(--border-muted);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .soc1als__link:active {
    color: var(--border-muted);
    transition-duration: var(--transition-duration);
  }
}
.soc1als__link-icon-inner {
  width: 1.25rem;
  height: 1.25rem;
}

#particles-js {
  position: absolute;
  z-index: -1;
  inset: 0;
  will-change: transform;
  transform: translateZ(0);
}
@media (prefers-reduced-motion: reduce) {
  #particles-js {
    display: none;
  }
}
#particles-js canvas {
  image-rendering: optimizeSpeed;
  width: 100%;
  height: 100%;
}

.game {
  position: relative;
  display: flex;
  border: var(--border);
  border-radius: var(--border-radius-l);
  grid-area: game;
}

.score-counter {
  margin-left: 25%;
  grid-area: score-counter;
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
  font-weight: 400;
}

.clicking-object {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
}

.tabs-inner {
  display: flex;
  justify-content: center;
  border: var(--border);
  border-radius: var(--border-radius-l);
  margin-left: 1.5625rem;
  grid-area: tabs-inner;
  min-height: 0;
}

.tabs-content-inner {
  display: flex;
  align-items: center;
  justify-content: start;
  flex-direction: column;
  gap: 0.625rem;
  padding: 1.5625rem;
  width: 100%;
  min-height: 0;
  height: 100%;
}

.tabs {
  --tabs-nav-gap: 0.625rem;
  display: flex;
  flex-direction: column;
  gap: 0.3125rem;
  flex: 1;
  min-height: 0;
  height: 100%;
}
.tabs__nav {
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  gap: var(--tabs-nav-gap);
  background-color: var(--bg-light);
  padding: 0.4375rem 1.25rem;
  border-radius: var(--border-radius-m);
  scroll-behavior: smooth;
  scrollbar-width: none;
  margin-bottom: 0.375rem;
  flex-shrink: 0;
  transition-duration: var(--transition-change-theme);
}
.tabs__nav-item {
  position: relative;
  flex-shrink: 0;
  min-height: var(--input-height);
  padding: 0.5rem 1rem;
  border: none;
  background: transparent;
  color: var(--text-muted);
  border-radius: var(--border-radius-m);
  transition-property: background-color, color, transform;
  transition-duration: var(--transition-change-theme);
}
.tabs__nav-item:focus {
  outline: none;
  box-shadow: none;
}
.tabs__nav-item:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.tabs__nav-item:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .tabs__nav-item:hover {
    background-color: var(--bg-dark);
    color: var(--text);
    transform: translateY(-0.0625rem);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .tabs__nav-item:active {
    background-color: var(--bg-dark);
    color: var(--text);
    transform: translateY(-0.0625rem);
    transition-duration: var(--transition-duration);
  }
}
.tabs__nav-item:active {
  transform: translateY(0);
}
.tabs__nav-item.is-active {
  background-color: var(--bg);
  color: var(--text);
}
.tabs__nav-item.is-active:hover {
  transform: none;
  background-color: var(--bg);
}
.tabs__nav-item.is-active::after {
  content: "";
  position: absolute;
  bottom: -0.125rem;
  left: 50%;
  transform: translateX(-50%);
  width: 1.25rem;
  height: 0.125rem;
  background-color: var(--primary);
  border-radius: 0.0625rem;
}
.tabs__content {
  position: relative;
  align-self: center;
  background-color: var(--bg);
  overflow: hidden;
  transition-duration: var(--transition-change-theme);
  flex: 1;
  min-height: 0;
  width: 100%;
}
.tabs__panel {
  padding: 0 1.5rem;
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow-y: auto;
  transform: translateX(1.25rem);
  transition-duration: var(--transition-change-theme);
  transition-property: opacity, visibility, transform;
}
.tabs__panel.is-active {
  opacity: 1;
  visibility: visible;
  position: relative;
  transform: translateX(0);
  height: 100%;
}

.rules {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
}
.rules__title {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
  font-weight: 400;
  text-align: center;
}
.rules__list {
  display: flex;
  flex-direction: column;
  padding-left: 1.4375rem;
  gap: 0.625rem;
  color: var(--text-muted);
  transition-duration: var(--transition-change-theme);
}

.inventory {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
  height: 100%;
  min-height: 0;
}
.inventory__title {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
  font-weight: 400;
  text-align: center;
  flex-shrink: 0;
}

.shop {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
  height: 100%;
  min-height: 0;
}
.shop__title {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
  font-weight: 400;
  text-align: center;
  flex-shrink: 0;
}

.list {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: max-content;
  align-content: start;
  gap: 0.9375rem;
  overflow-y: auto;
  overflow-x: hidden;
  flex: 1;
  min-height: 0;
  padding-right: 0.5rem;
}
.list__item {
  height: -moz-fit-content;
  height: fit-content;
}
.list::-webkit-scrollbar {
  width: 0.375rem;
}
.list::-webkit-scrollbar-track {
  background-color: var(--bg);
  border-radius: 0.1875rem;
}
.list::-webkit-scrollbar-thumb {
  background-color: var(--border-color);
  border-radius: 0.1875rem;
}
.list::-webkit-scrollbar-thumb:hover {
  background-color: var(--border-muted);
}

.card {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 0.625rem;
  padding: 1.25rem 0.9375rem;
  background-color: var(--bg-light);
  border-radius: var(--border-radius-m);
  border: var(--border);
  transition-property: transform, box-shadow, border-color, background-color;
  transition-duration: var(--transition-change-theme);
  text-align: center;
  cursor: default;
  position: relative;
  overflow: hidden;
}
.card::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 0.1875rem;
  background: linear-gradient(90deg, var(--primary), var(--secondary));
  opacity: 0;
  transition: opacity var(--transition-duration);
}
@media (any-hover: hover) {
  .card:hover {
    transform: translateY(-0.25rem);
    border-color: var(--border-muted);
  }
  .card:hover::before {
    opacity: 1;
  }
  .card:hover .card__image {
    transform: scale(1.05);
  }
}
.card__image {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
  transition: transform var(--transition-duration);
}
.card__image-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 6.25rem;
  height: 6.25rem;
  transition: background-color var(--transition-change-theme);
}
.card__title {
  font-size: clamp(1rem, 0.9597107438rem + 0.1652892562vw, 1.125rem);
  color: var(--text);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color var(--transition-change-theme);
}
.card__description {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.75rem;
  width: 100%;
  margin-top: auto;
  padding-top: 0.625rem;
  border-top: 0.0625rem solid var(--border-muted);
  transition: border-color var(--transition-change-theme);
}
.card__price {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
  background-color: var(--bg-dark);
  border-radius: var(--border-radius-xxs);
  transition: background-color var(--transition-change-theme);
}
.card__price-image {
  width: 1.25rem;
  height: 1.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card__price-image svg {
  width: 100%;
  height: 100%;
}
.card__price-digit {
  font-size: clamp(0.875rem, 0.8347107438rem + 0.1652892562vw, 1rem);
  color: var(--text);
  line-height: 1;
}

.popup-container {
  position: fixed;
  inset: 0;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  transition: visibility 0s linear 0.25s;
}
.popup-container[aria-hidden=false] {
  pointer-events: auto;
  transition-delay: 0s;
}
.popup-container[aria-hidden=true] {
  visibility: hidden;
}

.popup-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.6);
  opacity: 0;
  transition: opacity 0.25s ease;
}
.popup-container[aria-hidden=false] .popup-overlay {
  opacity: 1;
}

.popup {
  position: relative;
  left: 35vw;
  top: 35vh;
  z-index: 1001;
  width: 90%;
  max-width: 31.25rem;
  max-height: 85vh;
  opacity: 0;
  transform: translateY(-1.25rem) scale(0.95);
  transition: opacity 0.25s ease, transform 0.25s ease;
}
.popup-container[aria-hidden=false] .popup {
  opacity: 1;
  transform: translateY(0) scale(1);
}
.popup__close {
  --size: 1.5rem;
  position: absolute;
  top: calc(var(--size) / 2);
  right: calc(var(--size) / 2);
  z-index: 1;
  width: var(--size);
  height: var(--size);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  border: none;
  background-color: var(--bg-light);
  border-radius: 50%;
  border: var(--border);
  color: var(--text-muted);
  cursor: pointer;
  transition: background-color var(--transition-duration), color var(--transition-duration), transform var(--transition-duration);
}
.popup__close:focus {
  outline: none;
  box-shadow: none;
}
.popup__close:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.popup__close:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .popup__close:hover {
    background-color: var(--border-color);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .popup__close:active {
    background-color: var(--border-color);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
.popup__close:active {
  transform: translateY(0);
}
@media (any-hover: hover) {
  .popup__close:hover {
    background-color: var(--highlight);
  }
}
@media (any-hover: none) {
  .popup__close:active {
    background-color: var(--highlight);
  }
}
.popup__close::before, .popup__close::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: calc(var(--size) / 2);
  height: 0.125rem;
  background-color: var(--text-muted);
  border-radius: var(--border-radius-m);
}
.popup__close::before {
  rotate: 45deg;
}
.popup__close::after {
  rotate: -45deg;
}
.popup__content {
  display: flex;
  flex-direction: column;
  gap: 0.9375rem;
  padding: 1.5rem;
  background-color: var(--bg);
  border: var(--border);
  border-radius: var(--border-radius-l);
  box-shadow: 0 1.25rem 3.75rem rgba(0, 0, 0, 0.3);
  overflow-y: auto;
  max-height: inherit;
  transition-duration: var(--transition-change-theme);
}
.popup__content--card {
  display: grid;
  gap: 0.9375rem;
  grid-template: "image title" "image price" "description description" "buttons buttons";
  place-items: center;
}
.popup__image {
  width: 100%;
  height: 100%;
  border: var(--border);
  border-radius: var(--border-radius-l);
}
.popup__image-inner--card {
  grid-area: image;
  width: 7.5rem;
  height: 7.5rem;
  justify-items: center;
  align-items: center;
}
.popup__title h2 {
  margin: 0;
  font-size: clamp(1.375rem, 1.2541322314rem + 0.4958677686vw, 1.75rem);
  font-weight: 600;
  color: var(--text);
}
.popup__title--card {
  grid-area: title;
  text-align: center;
}
.popup__price {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
  background-color: var(--bg-dark);
  border-radius: var(--border-radius-xxs);
  transition: background-color var(--transition-change-theme);
}
.popup__price-image {
  width: 1.25rem;
  height: 1.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
.popup__price-image svg {
  width: 100%;
  height: 100%;
}
.popup__price-digit {
  font-size: clamp(0.875rem, 0.8347107438rem + 0.1652892562vw, 1rem);
  color: var(--text);
  line-height: 1;
}
.popup__description {
  margin: 0;
  line-height: 1.6;
  color: var(--text-muted);
}
.popup__description--card {
  grid-area: description;
}
.popup__buttons-inner {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  gap: 1.25rem;
  width: 100%;
}
.popup__buttons-inner--card {
  grid-area: buttons;
}
.popup__button-close {
  align-self: center;
  min-height: var(--input-height);
  padding: 0.625rem 1.5rem;
  border: var(--border);
  border-radius: var(--border-radius-m);
  background-color: var(--bg-light);
  color: var(--text);
  transition: background-color var(--transition-duration), color var(--transition-duration), transform var(--transition-duration);
}
.popup__button-close:focus {
  outline: none;
  box-shadow: none;
}
.popup__button-close:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.popup__button-close:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .popup__button-close:hover {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .popup__button-close:active {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
.popup__button-close:active {
  transform: translateY(0);
}

/*# sourceMappingURL=styles.css.map */