@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap");
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 1.5rem;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --bg-dark: oklch(0.1 0.005 20);
  --bg: oklch(0.15 0.005 20);
  --bg-light: oklch(0.2 0.005 20);
  --text: oklch(0.96 0.01 20);
  --text-muted: oklch(0.76 0.01 20);
  --highlight: oklch(0.5 0.01 20);
  --border-color: oklch(0.4 0.01 20);
  --border-muted: oklch(0.3 0.01 20);
  --primary: oklch(0.76 0.1 20);
  --secondary: oklch(0.76 0.1 200);
  --danger: oklch(0.7 0.05 30);
  --warning: oklch(0.7 0.05 100);
  --success: oklch(0.7 0.05 160);
  --info: oklch(0.7 0.05 260);
}
:root body.light {
  --bg-dark: oklch(0.92 0.005 20);
  --bg: oklch(0.96 0.005 20);
  --bg-light: oklch(1 0.005 20);
  --text: oklch(0.15 0.01 20);
  --text-muted: oklch(0.4 0.01 20);
  --highlight: oklch(1 0.01 20);
  --border-color: oklch(0.6 0.01 20);
  --border-muted: oklch(0.7 0.01 20);
  --primary: oklch(0.4 0.1 20);
  --secondary: oklch(0.4 0.1 200);
  --danger: oklch(0.5 0.05 30);
  --warning: oklch(0.5 0.05 100);
  --success: oklch(0.5 0.05 160);
  --info: oklch(0.5 0.05 260);
}
:root {
  --border: var(--border-width-m) solid var(--border-color);
  --border-width-xl: 0.375rem;
  --border-width-l: 0.25rem;
  --border-width-m: 0.1875rem;
  --border-width-xm: 0.125rem;
  --border-width-s: 0.0625rem;
  --border-radius-l: 0.75rem;
  --border-radius-m: 0.625rem;
  --border-radius: 0.5rem;
  --border-radius-xs: 0.375rem;
  --border-radius-xxs: 0.3125rem;
  --border-radius-xxxs: 0.25rem;
  --z-index-particles: -1;
  --z-index-tabs-overlay: 100;
  --z-index-tabs-panel: 101;
  --z-index-alert: 1000;
  --input-height: 3rem;
  --font-family-base: "Rubik", sans-serif;
  --container-width: clamp(80rem, 0rem + 100vw, 100rem);
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --transition-change-theme: 0.4s;
  --transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
  --card-width: 13.75rem;
}
@media (width <= 90rem) {
  :root {
    --card-width: 11.25rem;
  }
}
@media (width <= 64rem) {
  :root {
    --card-width: 9.375rem;
  }
}
:root {
  --shadow-sm: 0 0.0625rem 0.125rem 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 0.25rem 0.375rem -0.0625rem rgb(0 0 0 / 0.1);
  --shadow-lg: 0 0.625rem 0.9375rem -0.1875rem rgb(0 0 0 / 0.1);
  --shadow-xl: 0 1.25rem 1.5625rem -0.3125rem rgb(0 0 0 / 0.1);
}

.container {
  width: 100%;
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  overflow: hidden !important;
  width: 0.0625rem !important;
  height: 0.0625rem !important;
  margin: -0.0625rem !important;
  padding: 0 !important;
  white-space: nowrap !important;
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  clip-path: inset(100%) !important;
}

@media (width > 64rem) {
  .visible-tablet {
    display: none !important;
  }
}

@media (width <= 64rem) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (width > 47.9375rem) {
  .visible-mobile {
    display: none !important;
  }
}

@media (width <= 47.9375rem) {
  .hidden-mobile {
    display: none !important;
  }
}

html {
  touch-action: manipulation;
}
html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base), sans-serif;
  color: var(--text);
  background-color: var(--bg);
  font-weight: 500;
  height: 100%;
  min-height: 100vh;
  overflow: hidden;
  transition-duration: var(--transition-change-theme);
}

h1,
.h1 {
  font-size: clamp(1.75rem, 1.145661157rem + 2.479338843vw, 3.625rem);
  font-weight: 700;
}

h2,
.h2 {
  font-size: clamp(1.5rem, 1.0165289256rem + 1.9834710744vw, 3rem);
  font-weight: 700;
}

h3,
.h3 {
  font-size: clamp(1.25rem, 0.8873966942rem + 1.4876033058vw, 2.375rem);
  font-weight: 700;
}

h4,
.h4 {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
  font-weight: 400;
}

h5,
.h5 {
  font-size: clamp(1.125rem, 1.0444214876rem + 0.3305785124vw, 1.375rem);
  font-weight: 400;
}

h6,
.h6 {
  font-size: clamp(1rem, 0.9194214876rem + 0.3305785124vw, 1.25rem);
  font-weight: 400;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--border-color);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--border-color);
  }
}
a[class] {
  text-decoration: none;
}

@keyframes spin360deg {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.625rem;
  padding-top: 1.25rem;
  margin-bottom: 0.625rem;
  flex-shrink: 0;
}
@media (width <= 64rem) {
  .header {
    margin-bottom: 1.25rem;
  }
}
@media (width <= 47.9375rem) {
  .header {
    margin-bottom: 2.1875rem;
  }
}
.header {
  font-size: clamp(1.25rem, 0.8873966942rem + 1.4876033058vw, 2.375rem);
  font-weight: 700;
}
.header__content {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.625rem;
  cursor: default;
}
@media (any-hover: hover) {
  .header__content:hover .header__logo {
    animation-name: spin360deg;
    animation-duration: 0.9s;
    animation-iteration-count: infinite;
  }
}
.header__logo {
  width: 3rem;
  height: 3rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media (width <= 64rem) {
  .header__logo {
    width: 2.25rem;
    height: 2.25rem;
  }
}
@media (width <= 47.9375rem) {
  .header__logo {
    width: 1.875rem;
    height: 1.875rem;
  }
}
.header__theme-icon-inner {
  display: flex;
  justify-content: center;
  align-items: center;
}

.button {
  height: var(--input-height);
  border-radius: 2.125rem;
  transition-duration: var(--transition-change-theme);
  border: none;
  background: none;
  cursor: pointer;
}
@media (any-hover: hover) {
  .button:hover {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
@media (any-hover: none) {
  .button:active {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
.button:focus {
  outline: none;
  box-shadow: none;
}
.button:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.button-theme {
  --sizeButton: 6rem;
  position: relative;
  width: var(--sizeButton);
  background-color: var(--bg-light);
  border: var(--border);
}
@media (width <= 64rem) {
  .button-theme {
    --sizeButton: 4.75rem;
    --input-height: 2.25rem;
    border-width: var(--border-width-xm);
  }
}
@media (any-hover: hover) {
  .button-theme:hover {
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-theme:active {
    transform: translateY(-0.125rem);
  }
}
.button-theme:active {
  transform: translateY(0);
}
.button-theme-toggle {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(var(--sizeButton) / 4);
  height: calc(var(--sizeButton) / 4);
  left: calc(var(--sizeButton) / 8);
  transition: transform var(--transition-change-theme);
}
.button-theme-toggle svg {
  width: calc(var(--sizeButton) / 4);
  height: calc(var(--sizeButton) / 4);
  border: var(--border-width-s) solid var(--border-color);
  border-radius: 50%;
  background-color: var(--bg-dark);
}
.button-theme-toggle.is-active {
  --translateX: calc(var(--sizeButton) / 2.2);
  transform: translateX(var(--translateX));
}
.button-clicking {
  width: clamp(15.625rem, 11.5960743802rem + 16.5289256198vw, 28.125rem);
  height: clamp(15.625rem, 11.5960743802rem + 16.5289256198vw, 28.125rem);
  border: var(--border);
  border-width: var(--border-width-xm);
  background-color: var(--bg);
  background-image: url("/paw-clicker/images/cat.png");
  background-size: 100%;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
  overflow: hidden;
  transition: background-color var(--transition-duration), background-image var(--transition-duration), transform var(--transition-duration);
}
@media (any-hover: hover) {
  .button-clicking:hover {
    background-color: var(--bg-light);
    transform: translateY(-0.1875rem) scale(1.02);
    background-image: url("/paw-clicker/images/cat-blink.png");
  }
}
@media (any-hover: none) {
  .button-clicking:active {
    background-color: var(--bg-light);
    transform: translateY(-0.1875rem) scale(1.02);
    background-image: url("/paw-clicker/images/cat-blink.png");
  }
}
.button-clicking:active {
  transform: translateY(0) scale(0.98);
}
.button-reset {
  --sizeButton: 3rem;
  width: var(--sizeButton);
  height: var(--sizeButton);
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
  flex-shrink: 0;
}
@media (width <= 64rem) {
  .button-reset {
    --sizeButton: 2.25rem;
    border-width: var(--border-width-xm);
  }
}
.button-reset svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
  transition: transform var(--transition-duration);
}
@media (any-hover: hover) {
  .button-reset:hover {
    color: var(--text);
  }
  .button-reset:hover svg {
    animation: spin360deg 0.7s ease-in-out;
  }
  .button-reset:hover {
    transform: translateY(-0.125rem);
  }
  .button-reset:hover:active {
    transform: translateY(0);
  }
}
.button-popup-link {
  display: flex;
  align-items: center;
  justify-content: center;
  --input-height: 2.25rem;
  padding: 0.5rem 0.75rem;
  border-radius: var(--border-radius-m);
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
  border-width: var(--border-width-s);
  white-space: nowrap;
}
@media (any-hover: hover) {
  .button-popup-link:hover {
    background-color: var(--border-color);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-popup-link:active {
    background-color: var(--border-color);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
.button-popup-link:active {
  transform: translateY(0);
}
@media (width <= 64rem) {
  .button-popup-link {
    --input-height: 2rem;
    padding: 0.375rem 0.625rem;
    font-size: 0.8125rem;
  }
}
.button-tabs-close-button {
  --sizeButton: 2.25rem;
  width: var(--sizeButton);
  height: var(--sizeButton);
  position: relative;
  background-color: var(--bg-light);
  border: var(--border);
  color: var(--text-muted);
  flex-shrink: 0;
}
@media (any-hover: hover) {
  .button-tabs-close-button:hover {
    background-color: var(--border-muted);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .button-tabs-close-button:active {
    background-color: var(--border-muted);
    color: var(--text);
    transform: translateY(-0.125rem);
  }
}
.button-tabs-close-button:active {
  transform: translateY(0);
}
@media (width <= 64rem) {
  .button-tabs-close-button {
    border-width: var(--border-width-xm);
  }
}
.button-tabs-close-button::before, .button-tabs-close-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  background-color: currentColor;
  width: 0.125rem;
  height: calc(var(--sizeButton) / 2);
  border-radius: 0.1875rem;
  transition: background-color var(--transition-duration);
}
.button-tabs-close-button::before {
  transform: rotate(45deg);
}
.button-tabs-close-button::after {
  transform: rotate(-45deg);
}

@keyframes spin360deg {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.burger-button {
  --input-height: 2.25rem;
  width: 5rem;
  position: relative;
  grid-area: burger-button;
  height: var(--input-height);
  border-radius: 2.25rem;
  border: var(--border);
  border-width: var(--border-width-xm);
  transition-duration: var(--transition-change-theme);
  background-color: var(--bg-light);
  color: var(--text-muted);
}
@media (any-hover: hover) {
  .burger-button:hover {
    background-color: var(--border-muted);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    background-color: var(--border-muted);
    transform: translateY(-0.125rem);
  }
}
.burger-button:active {
  transform: translateY(0);
}
.burger-button:focus {
  outline: none;
  box-shadow: none;
}
.burger-button:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.burger-button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.burger-button.is-active::before, .burger-button.is-active::after {
  translate: -0.625rem -0.0625rem;
}
.burger-button.is-active::before {
  transform: rotate(-45deg) translateY(0.375rem);
}
.burger-button.is-active::after {
  transform: rotate(45deg) translateY(-0.375rem);
}
@media (any-hover: hover) {
  .burger-button:hover {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    transition-duration: var(--transition-duration);
    background-color: var(--border-muted);
  }
}
.burger-button::before, .burger-button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 0.9375rem;
  height: 0.1875rem;
  background-color: var(--text-muted);
  transition-duration: var(--transition-change-theme);
  translate: -0.3125rem -0.0625rem;
  border-radius: 0.1875rem;
}
.burger-button::before {
  transform: rotate(45deg) translateY(0.375rem);
}
.burger-button::after {
  transform: rotate(-45deg) translateY(-0.375rem);
}

.main {
  display: grid;
  grid-template-columns: 60% 40%;
  grid-template-rows: auto 1fr;
  grid-template-areas: "score-counter score-counter" "game tabs-inner";
  row-gap: 0.625rem;
  flex: 1;
  min-height: 0;
  margin-bottom: 1.25rem;
  overflow: hidden;
}
@media (width <= 64rem) {
  .main {
    grid-template-columns: 1fr auto;
    grid-template-areas: "score-counter burger-button" "game game";
    overflow: visible;
    row-gap: 0.75rem;
  }
}

.footer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}

.soc1als__list {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1.25rem;
  padding-block: 0.9375rem;
}
.soc1als__item {
  display: flex;
  justify-content: center;
  align-items: center;
}
.soc1als__link {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.625rem;
  padding: 0.5rem 0.75rem;
}
.soc1als__link:focus {
  outline: none;
  box-shadow: none;
}
.soc1als__link:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.soc1als__link:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .soc1als__link:hover {
    color: var(--border-muted);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .soc1als__link:active {
    color: var(--border-muted);
    transition-duration: var(--transition-duration);
  }
}
.soc1als__link-icon-inner {
  width: 1.25rem;
  height: 1.25rem;
}

#particles-js {
  position: absolute;
  z-index: -1;
  inset: 0;
  will-change: transform;
  transform: translateZ(0);
}
@media (prefers-reduced-motion: reduce) {
  #particles-js {
    display: none;
  }
}
#particles-js canvas {
  image-rendering: optimizeSpeed;
  width: 100%;
  height: 100%;
}

.game {
  position: relative;
  display: flex;
  border: var(--border);
  border-radius: var(--border-radius-l);
  grid-area: game;
  overflow: hidden;
  transition: background-color var(--transition-change-theme);
  min-height: 25rem;
}
@media (width <= 64rem) {
  .game {
    min-height: 21.875rem;
  }
}
@media (width <= 47.9375rem) {
  .game {
    min-height: 18.75rem;
  }
}

.clicking-object {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
  z-index: 1;
  position: relative;
}
.clicking-object::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 20rem;
  height: 20rem;
  background: radial-gradient(circle, var(--primary) 0%, transparent 70%);
  opacity: 0;
  transition: opacity var(--transition-duration);
  pointer-events: none;
  z-index: -1;
}
@media (width <= 64rem) {
  .clicking-object::before {
    width: 13.75rem;
    height: 13.75rem;
  }
}
@media (any-hover: hover) {
  .clicking-object:hover::before {
    opacity: 0.1;
  }
}

.score-counter {
  display: flex;
  gap: 0.625rem;
  justify-content: center;
  align-items: center;
  grid-area: score-counter;
  font-size: clamp(1.125rem, 0.8429752066rem + 1.1570247934vw, 2rem);
  font-weight: 400;
}
.score-counter p {
  margin-block: auto;
  color: var(--text);
}
.score-counter__price {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.5rem 0.75rem;
  background-color: var(--bg-light);
  border-radius: var(--border-radius-xxs);
  transition: background-color var(--transition-change-theme);
  border: 0.0625rem solid var(--border-color);
}
@media (width <= 64rem) {
  .score-counter__price {
    gap: 0.25rem;
    padding: 0.375rem 0.625rem;
  }
}
.score-counter__price-image {
  width: 2.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
@media (width <= 64rem) {
  .score-counter__price-image {
    width: 1.75rem;
    height: 1.75rem;
  }
}
.score-counter__price-image img {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}
.score-counter__price-digit {
  font-size: clamp(1rem, 0.9597107438rem + 0.1652892562vw, 1.125rem);
  color: var(--text);
  font-weight: 600;
  min-width: 3.75rem;
  text-align: center;
}
@media (width <= 64rem) {
  .score-counter__price-digit {
    min-width: 3.125rem;
  }
}

.clicking-object {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
}

.tabs-inner {
  display: flex;
  justify-content: center;
  border: var(--border);
  border-radius: var(--border-radius-l);
  margin-left: 1.5625rem;
  grid-area: tabs-inner;
  min-height: 0;
}
@media (width <= 64rem) {
  .tabs-inner {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: var(--z-index-tabs-panel);
    width: 50%;
    margin-left: 0;
    background-color: var(--bg);
    box-shadow: -0.25rem 0 1.25rem rgba(0, 0, 0, 0.3);
    border-radius: 0;
    border-right: none;
    transform: translateX(100%);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .tabs-inner.is-active {
    transform: translateX(0);
  }
}
@media (width <= 47.9375rem) {
  .tabs-inner {
    width: 75%;
  }
}
@media (width <= 30rem) {
  .tabs-inner {
    width: 100%;
  }
}

.tabs-overlay {
  display: none;
}
@media (width <= 64rem) {
  .tabs-overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: var(--z-index-tabs-overlay);
    opacity: 0;
    transition: opacity 0.3s ease;
    backdrop-filter: blur(0.125rem);
  }
  .tabs-overlay.is-active {
    display: block;
    opacity: 1;
  }
}

.tabs-content-inner {
  display: flex;
  align-items: center;
  justify-content: start;
  flex-direction: column;
  gap: 0.625rem;
  padding: 1.5625rem;
  width: 100%;
  min-height: 0;
  height: 100%;
}
@media (width <= 64rem) {
  .tabs-content-inner {
    padding: 1.25rem 0.9375rem;
  }
}
@media (width <= 47.9375rem) {
  .tabs-content-inner {
    padding: 0.9375rem 0.625rem;
  }
}

.tabs {
  --tabs-nav-gap: 0.625rem;
  display: flex;
  flex-direction: column;
  gap: 0.3125rem;
  flex: 1;
  min-height: 0;
  height: 100%;
  width: 100%;
}
.tabs__buttons-inner {
  display: flex;
  justify-content: end;
  align-items: center;
  width: 100%;
  gap: 0.625rem;
}
@media (width <= 64rem) {
  .tabs__buttons-inner {
    justify-content: space-between;
  }
}
.tabs__nav {
  display: flex;
  justify-content: center;
  align-items: center;
  align-self: center;
  gap: var(--tabs-nav-gap);
  background-color: var(--bg-light);
  padding: 0.4375rem 1.25rem;
  border-radius: var(--border-radius-m);
  scroll-behavior: smooth;
  scrollbar-width: none;
  margin-bottom: 0.375rem;
  flex-shrink: 0;
  transition-duration: var(--transition-change-theme);
}
.tabs__nav::-webkit-scrollbar {
  display: none;
}
@media (width <= 64rem) {
  .tabs__nav {
    padding: 0.375rem 0.75rem;
  }
}
.tabs__nav-item {
  position: relative;
  flex-shrink: 0;
  min-height: var(--input-height);
  padding: 0.5rem 1rem;
  border: none;
  background: transparent;
  color: var(--text-muted);
  border-radius: var(--border-radius-m);
  transition-property: background-color, color, transform;
  transition-duration: var(--transition-change-theme);
  white-space: nowrap;
}
@media (width <= 64rem) {
  .tabs__nav-item {
    --input-height: 2.25rem;
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
  }
}
.tabs__nav-item:focus {
  outline: none;
  box-shadow: none;
}
.tabs__nav-item:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.tabs__nav-item:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .tabs__nav-item:hover {
    background-color: var(--bg-dark);
    color: var(--text);
    transform: translateY(-0.0625rem);
    transition-duration: var(--transition-duration);
  }
}
@media (any-hover: none) {
  .tabs__nav-item:active {
    background-color: var(--bg-dark);
    color: var(--text);
    transform: translateY(-0.0625rem);
    transition-duration: var(--transition-duration);
  }
}
.tabs__nav-item:active {
  transform: translateY(0);
}
.tabs__nav-item.is-active:focus {
  outline: none;
  box-shadow: none;
}
.tabs__nav-item.is-active:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.tabs__nav-item.is-active:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.tabs__nav-item.is-active {
  background-color: var(--bg);
  color: var(--text);
  cursor: default;
}
.tabs__nav-item.is-active:hover {
  transform: none;
  background-color: var(--bg);
}
.tabs__nav-item.is-active::after {
  content: "";
  position: absolute;
  bottom: -0.125rem;
  left: 50%;
  transform: translateX(-50%);
  width: 1.25rem;
  height: 0.125rem;
  background-color: var(--primary);
  border-radius: 0.0625rem;
}
.tabs__content {
  position: relative;
  align-self: center;
  background-color: var(--bg);
  overflow: hidden;
  transition-duration: var(--transition-change-theme);
  flex: 1;
  min-height: 0;
  width: 100%;
  border-radius: var(--border-radius-m);
}
.tabs__panel {
  padding: 0 1.5rem;
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow-y: auto;
  overflow-x: hidden;
  transform: translateX(1.25rem);
  transition-duration: var(--transition-change-theme);
  transition-property: opacity, visibility, transform;
}
@media (width <= 64rem) {
  .tabs__panel {
    padding: 0 1rem;
  }
}
@media (width <= 47.9375rem) {
  .tabs__panel {
    padding: 0 0.5rem;
  }
}
.tabs__panel.is-active {
  opacity: 1;
  visibility: visible;
  position: relative;
  transform: translateX(0);
  height: 100%;
  width: 100%;
}

.rules {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
}
.rules__title {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
  font-weight: 400;
  text-align: center;
}
.rules__list {
  display: flex;
  flex-direction: column;
  padding-left: 1.4375rem;
  overflow-y: auto;
  overflow-x: hidden;
  gap: 0.625rem;
  color: var(--text-muted);
  transition-duration: var(--transition-change-theme);
}
.rules__list::-webkit-scrollbar {
  width: 0.375rem;
}
@media (width <= 64rem) {
  .rules__list::-webkit-scrollbar {
    width: 0.25rem;
  }
}
.rules__list::-webkit-scrollbar-track {
  background-color: var(--bg);
  border-radius: 0.1875rem;
}
.rules__list::-webkit-scrollbar-thumb {
  background-color: var(--border-color);
  border-radius: 0.1875rem;
  -webkit-transition: background-color var(--transition-duration);
  transition: background-color var(--transition-duration);
}
.rules__list::-webkit-scrollbar-thumb:hover {
  background-color: var(--border-muted);
}
.rules__list::-webkit-scrollbar-thumb:active {
  background-color: var(--text-muted);
}

.inventory {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
  height: 100%;
  min-height: 0;
}
.inventory__title {
  font-size: clamp(1.5rem, 1.3388429752rem + 0.6611570248vw, 2rem);
  font-weight: 400;
  text-align: center;
  flex-shrink: 0;
}

.shop {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
  height: 100%;
  min-height: 0;
}
.shop__title {
  font-size: clamp(1.25rem, 1.0082644628rem + 0.9917355372vw, 2rem);
  font-weight: 400;
  text-align: center;
  flex-shrink: 0;
}

.list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(9.375rem, 100%), var(--card-width)));
  grid-auto-rows: max-content;
  align-content: start;
  justify-content: center;
  gap: 0.9375rem;
  overflow-y: auto;
  overflow-x: hidden;
  flex: 1;
  min-height: 0;
  padding-right: 0.5rem;
  max-width: 100%;
}
@media (width <= 64rem) {
  .list {
    gap: 0.75rem;
    padding-right: 0.25rem;
  }
}
.list__empty-message {
  grid-column: 1/-1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  color: var(--text);
  text-align: center;
  margin: 1.25rem auto;
  padding: 1.25rem;
  max-width: 18.75rem;
  border: var(--border);
  border-radius: var(--border-radius-m);
  transition-duration: var(--transition-change-theme);
}
.list__empty-message-image {
  justify-self: center;
  max-width: 7.5rem;
  width: 100%;
  height: auto;
}
.list__empty-message p {
  margin: 0;
  color: var(--text-muted);
}
.list__item {
  height: 100%;
  width: 100%;
  display: flex;
  min-height: 17.5rem;
}
@media (width <= 64rem) {
  .list__item {
    min-height: 16.25rem;
  }
}
.list::-webkit-scrollbar {
  width: 0.375rem;
}
@media (width <= 64rem) {
  .list::-webkit-scrollbar {
    width: 0.25rem;
  }
}
.list::-webkit-scrollbar-track {
  background-color: var(--bg);
  border-radius: 0.1875rem;
}
.list::-webkit-scrollbar-thumb {
  background-color: var(--border-color);
  border-radius: 0.1875rem;
  -webkit-transition: background-color var(--transition-duration);
  transition: background-color var(--transition-duration);
}
.list::-webkit-scrollbar-thumb:hover {
  background-color: var(--border-muted);
}
.list::-webkit-scrollbar-thumb:active {
  background-color: var(--text-muted);
}

.card {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 0.625rem;
  padding: 1.25rem 0.9375rem;
  background-color: var(--bg-light);
  border-radius: var(--border-radius-m);
  border: var(--border);
  transition-property: transform, box-shadow, border-color, background-color;
  transition-duration: var(--transition-change-theme);
  text-align: center;
  cursor: default;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
  min-width: 0;
}
@media (width <= 64rem) {
  .card {
    gap: 0.5rem;
    padding: 0.9375rem 0.625rem;
    border-width: var(--border-width-xm);
  }
}
.card::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 0.1875rem;
  background: linear-gradient(90deg, var(--primary), var(--secondary));
  opacity: 0;
  transition: opacity var(--transition-duration);
}
@media (any-hover: hover) {
  .card:hover {
    transform: translateY(-0.25rem);
    border-color: var(--border-muted);
  }
  .card:hover::before {
    opacity: 1;
  }
  .card:hover .card__image {
    transform: scale(1.05);
  }
}
.card__image {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
  transition: transform var(--transition-duration);
}
.card__image-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  max-width: 6.25rem;
  min-height: 6.25rem;
  transition: background-color var(--transition-change-theme);
}
@media (width <= 64rem) {
  .card__image-inner {
    max-width: 5rem;
    min-height: 5rem;
  }
}
.card__title {
  font-size: clamp(1rem, 0.9194214876rem + 0.3305785124vw, 1.25rem);
  color: var(--text);
  display: flex;
  align-items: center;
  margin-block: auto;
  justify-content: center;
  transition: color var(--transition-change-theme);
  line-height: 1.3;
  word-break: break-word;
  hyphens: auto;
}
.card__description {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;
  margin-top: auto;
  padding-top: 0.625rem;
  border-top: 0.0625rem solid var(--border-muted);
  transition: border-color var(--transition-change-theme);
}
@media (width <= 64rem) {
  .card__description {
    gap: 0.5rem;
    padding-top: 0.5rem;
  }
}
.card__price {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.5rem;
  background-color: var(--bg);
  border-radius: var(--border-radius-xxs);
  transition: background-color var(--transition-change-theme);
}
@media (width <= 64rem) {
  .card__price {
    gap: 0.25rem;
    padding: 0.25rem 0.375rem;
  }
}
.card__price-image {
  width: 2.25rem;
  height: 2.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
@media (width <= 64rem) {
  .card__price-image {
    width: 1.75rem;
    height: 1.75rem;
  }
}
.card__price__level {
  color: var(--text);
  font-size: inherit;
}
.card__price-digit {
  font-size: clamp(1rem, 0.9597107438rem + 0.1652892562vw, 1.125rem);
  color: var(--text);
  white-space: nowrap;
}

@keyframes popup-fade-in {
  from {
    opacity: 0;
    transform: translateY(-1.25rem) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
.popup {
  position: relative;
  padding: 0;
  margin: auto;
  border: none;
  background: transparent;
  max-width: 90%;
  width: 31.25rem;
  max-height: 85vh;
  overflow: visible;
}
.popup::backdrop {
  background-color: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(0.125rem);
}
.popup[open] {
  animation: popup-fade-in 0.25s var(--transition-timing) forwards;
}
.popup--confirm {
  width: 25rem;
}
.popup--card {
  width: 31.25rem;
}
.popup__content {
  display: flex;
  flex-direction: column;
  gap: 0.9375rem;
  padding: 1.5rem;
  background-color: var(--bg);
  border: var(--border);
  border-radius: var(--border-radius-l);
  box-shadow: 0 1.25rem 3.75rem rgba(0, 0, 0, 0.3);
  position: relative;
  transition-duration: var(--transition-change-theme);
}
.popup__content--card {
  display: grid;
  gap: 0.9375rem;
  grid-template: "close close" "image header" "image price" "body body" "footer footer"/auto 1fr;
  place-items: start;
}
.popup__content--card .popup__price-inner, .popup__content--card .popup__level-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
}
.popup__content--card .popup__level-inner {
  align-self: start;
}
.popup__content--card .popup__max-level-text {
  color: var(--text-muted);
}
.popup__close {
  --size: 1.75rem;
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  z-index: 1;
  padding: 0;
  border: var(--border);
  border-radius: 50%;
  background-color: var(--bg-light);
  color: var(--text-muted);
  cursor: pointer;
  transition: background-color var(--transition-duration), color var(--transition-duration), transform var(--transition-duration);
  width: var(--size);
  height: var(--size);
  display: flex;
  justify-content: center;
  align-items: center;
}
.popup__close:focus {
  outline: none;
  box-shadow: none;
}
.popup__close:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.popup__close:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .popup__close:hover {
    background-color: var(--highlight);
    color: var(--text);
    transform: translateY(-0.125rem) rotate(90deg);
  }
}
@media (any-hover: none) {
  .popup__close:active {
    background-color: var(--highlight);
    color: var(--text);
    transform: translateY(-0.125rem) rotate(90deg);
  }
}
.popup__close:active {
  transform: translateY(0) rotate(90deg);
}
.popup__close::before, .popup__close::after {
  content: "";
  position: absolute;
  width: calc(var(--size) / 2);
  height: 0.125rem;
  background-color: currentColor;
  border-radius: var(--border-radius-m);
  top: 50%;
  left: 50%;
}
.popup__close::before {
  transform: translate(-50%, -50%) rotate(45deg);
}
.popup__close::after {
  transform: translate(-50%, -50%) rotate(-45deg);
}
.popup__content--card .popup__close {
  grid-area: close;
  position: relative;
  top: 0;
  right: 0;
  justify-self: end;
}
.popup__card-image {
  grid-area: image;
  width: 7.5rem;
  height: 7.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
.popup__image {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
  border: var(--border);
  border-radius: var(--border-radius-m);
}
.popup__card-header {
  grid-area: header;
  align-self: center;
}
.popup__header {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.popup__title {
  margin: 0;
  font-size: clamp(1.375rem, 1.2541322314rem + 0.4958677686vw, 1.75rem);
  font-weight: 600;
  color: var(--text);
  text-align: center;
  line-height: 1.2;
}
.popup__content--card .popup__title {
  text-align: left;
}
.popup__card-price {
  grid-area: price;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 0.375rem;
  align-self: start;
}
.popup__price {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
  background-color: var(--bg-light);
  border-radius: var(--border-radius-xxs);
  transition: background-color var(--transition-change-theme);
}
.popup__price-label {
  color: var(--text-muted);
  margin-right: 0.25rem;
}
.popup__price-icon {
  width: 2rem;
  height: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
}
.popup__price-icon img {
  width: 100%;
  height: 100%;
  -o-object-fit: contain;
     object-fit: contain;
}
.popup__price-value, .popup__price-level-budge {
  font-size: clamp(0.875rem, 0.8347107438rem + 0.1652892562vw, 1rem);
  color: var(--text);
  line-height: 1;
  font-weight: 500;
}
.popup__price-level-budge {
  padding: 0.5rem 0.75rem;
}
.popup__card-body {
  grid-area: body;
  width: 100%;
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 0.5rem;
}
.popup__body {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}
.popup__description {
  margin: 0;
  line-height: 1.6;
  color: var(--text-muted);
}
.popup__description--centered-text {
  text-align: center;
}
.popup__current-effect, .popup__next-effect {
  margin: 0;
  line-height: 1.6;
  color: var(--text);
}
.popup__footer {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  gap: 0.75rem;
  width: 100%;
  margin-top: 0.5rem;
}
.popup__footer--card {
  grid-area: footer;
  margin-top: 0;
}
.popup__button {
  min-height: var(--input-height);
  padding: 0.75rem 1.5rem;
  border: var(--border);
  border-radius: var(--border-radius-m);
  background-color: var(--bg-light);
  color: var(--text);
  white-space: nowrap;
  cursor: pointer;
  font-weight: 500;
  transition: background-color var(--transition-duration), color var(--transition-duration), transform var(--transition-duration), border-color var(--transition-duration);
  max-width: 15.625rem;
}
.popup__button:focus {
  outline: none;
  box-shadow: none;
}
.popup__button:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.popup__button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .popup__button:hover {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
@media (any-hover: none) {
  .popup__button:active {
    background-color: var(--border-color);
    transform: translateY(-0.125rem);
  }
}
.popup__button:active {
  transform: translateY(0);
}
.popup__button--primary {
  background-color: var(--primary);
  color: var(--bg);
  border-color: var(--primary);
}
@media (any-hover: hover) {
  .popup__button--primary:hover {
    background-color: var(--secondary);
    border-color: var(--secondary);
  }
}
@media (any-hover: none) {
  .popup__button--primary:active {
    background-color: var(--secondary);
    border-color: var(--secondary);
  }
}
.popup__button--secondary {
  background-color: var(--bg-light);
  color: var(--text);
}

@media (width <= 64rem) {
  .popup {
    max-width: 95%;
    max-height: 90vh;
  }
  .popup__content {
    padding: 1.25rem;
    gap: 0.75rem;
  }
  .popup__content--card {
    grid-template: "close" "image" "header" "price" "body" "footer"/1fr;
    place-items: center;
    text-align: center;
  }
  .popup__close {
    --size: 2rem;
  }
  .popup__content--card .popup__close {
    justify-self: end;
  }
  .popup__card-image {
    width: 6.25rem;
    height: 6.25rem;
  }
  .popup__title {
    font-size: 1.25rem;
    text-align: center;
  }
  .popup__content--card .popup__title {
    text-align: center;
  }
  .popup__card-price {
    align-self: center;
  }
  .popup__footer {
    flex-direction: column;
    gap: 0.625rem;
    width: 100%;
  }
  .popup__footer--card {
    width: 100%;
  }
  .popup__button {
    width: 100%;
    min-height: 2.75rem;
  }
}
.alert {
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  z-index: 1000;
  display: flex;
  align-items: center;
  gap: 1rem;
  min-width: 18.75rem;
  max-width: 25rem;
  padding: 1rem 1.25rem;
  background-color: var(--bg-light);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.15);
  opacity: 0;
  visibility: hidden;
  transform: translateX(calc(100% + 1.5rem));
  transition: all var(--transition-duration) ease-in-out;
}
@media (width <= 47.9375rem) {
  .alert {
    bottom: 1rem;
    right: 1rem;
    left: 1rem;
    min-width: auto;
    max-width: none;
    transform: translateY(100%);
  }
}
.alert.is-visible {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}
@media (width <= 47.9375rem) {
  .alert.is-visible {
    transform: translateY(0);
  }
}
.alert--success {
  border-color: var(--success);
}
.alert--error {
  border-color: var(--danger);
}
.alert--info {
  border-color: var(--info);
}
.alert--warning {
  border-color: var(--warning);
}

.alert__content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.alert__icon {
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;
}
.alert__icon svg {
  width: 100%;
  height: 100%;
}
.alert--success .alert__icon {
  color: var(--success);
}
.alert--error .alert__icon {
  color: var(--danger);
}
.alert--info .alert__icon {
  color: var(--info);
}
.alert--warning .alert__icon {
  color: var(--warning);
}

.alert__message {
  font-size: clamp(0.875rem, 0.8347107438rem + 0.1652892562vw, 1rem);
  font-weight: 500;
  color: var(--text);
  line-height: 1.4;
  word-break: break-word;
}

.alert__close {
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;
  padding: 0;
  background: none;
  border: none;
  color: var(--text-muted);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color var(--transition-duration);
}
.alert__close:focus {
  outline: none;
  box-shadow: none;
}
.alert__close:focus-visible {
  outline: 0.125rem dashed var(--text);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}
.alert__close:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
@media (any-hover: hover) {
  .alert__close:hover {
    color: var(--text);
  }
}
@media (any-hover: none) {
  .alert__close:active {
    color: var(--text);
  }
}
.alert__close svg {
  width: 100%;
  height: 100%;
}

/*# sourceMappingURL=styles.css.map */